{"version":3,"sources":["assest/28.1 burger-logo.png","Aux.js","Logo.js","NavigationItem.js","NavigationItems.js","Toolbar.js","Backdrop.js","SideDrawer.js","Layout.js","BurgerIngredient.js","Burger.js","BuildControl.js","BuildControls.js","Button.js","OrderSummary.js","Modal.js","Spinner.js","store/actions/Auth.js","store/actions/order.js","BurgerBuilder.js","store/actions/burgerBuilder.js","store/actions/actionType.js","CheckoutSummary.js","Input.js","ContactData.js","Checkout.js","Order.js","Orders.js","Auth.js","Logout.js","App.js","serviceWorker.js","store/reducer/utility.js","store/reducer/burgerBuilder.js","store/reducer/order.js","store/reducer/Auth.js","index.js"],"names":["module","exports","Aux","props","children","Logo","className","src","logo","style","height","alt","NavigationItem","to","exact","activeClassName","authentication","NavigationItems","Toolbar","id","onClick","toggle","Backdrop","SideDrawer","classes","show","cancel","close","join","connect","state","isAuth","authReducer","token","useState","setShow","console","log","pre","BurgerIngrediant","ingredient","this","type","classsName","Component","withRouter","transforMedIngredients","Object","keys","ingredients","map","igKey","Array","_","index","BurgerIngredient","key","reduce","larr","carr","concat","length","textAlign","BuildControl","label","deleted","disabled","classNAme","added","controls","BuildControls","price","toFixed","ctrl","deletedIngredient","ingredientAdded","ordered","purchasable","isAuthenticated","Button","button","Click","OrderSummary","igkey","textTransform","ing","class","purchaseContinue","purchaseCancel","Modal","transform","opacity","Spinner","authSuccess","userId","authLogout","localStorage","removeItem","authRedirectPath","path","checkAuthTimeout","expire","dispatch","setTimeout","purchaseBurgerStart","BurgerBuilder","purchase","purchasing","prices","updatePurchaseState","sum","el","purchaseHandler","setState","onSetAuthRedirectPath","history","push","addIngredientsHandler","updatedCount","updatedIngredient","oldPrice","totalPrice","newPrice","deleteIngredientsHandler","oldCount","cancelOrder","queryParams","i","encodeURIComponent","queryString","search","initIngredients","disabledInfo","burger","orderSummary","onIngredientAdded","onIngredientRemoved","loading","error","burgerBuilder","order","name","burgerBuilderActions","axios","get","then","response","data","authAction","CheckoutSummary","width","margin","checkoutContinue","checkoutCancel","Input","invalidMessage","invalid","touched","undefined","value","inputElement","elementType","onChange","changed","elementConfig","options","option","displayValue","ContactData","orderForm","placeholder","validation","required","minLength","valid","street","zipcode","maxLength","country","email","deleveryMethod","formIsValid","checkValidity","rules","isValid","trim","orderHandler","e","preventDefault","formData","orderData","onPurchaseBurger","inputChangedHandler","updatedOrderForm","updatedFormElement","target","formElementArray","config","form","onSubmit","formElement","spinnerLoading","post","purchaseBurgerSuccess","catch","err","actions","Checkout","checkoutCancelHandler","goBack","checkoutContinueHandler","replace","query","URLSearchParams","location","param","entries","summary","render","Order","array","Orders","orders","params","res","fetchOrder","onFetchOrder","orderFetch","Auth","isEmail","password","isSignup","updatedControls","submitHandler","onAuth","onSignChange","building","onAuthRedirectPath","redirect","spinner","authData","returnSecureToken","url","setItem","idToken","expirationDate","Date","getTime","expiresIn","localId","authFail","authActions","Logout","onAuthLogout","React","App","onStateChange","component","getItem","Boolean","window","hostname","match","updateObject","oldObject","updatedObject","initialState","INGREDIENT_PRICES","salad","cheese","meat","bacon","reducer","action","updatedIngredients","updatedState","updatedIngredientRemoved","updatedIngredientsRemoved","updatedStateRemoved","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","newOrder","store","createStore","applyMiddleware","thunk","app","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.03d93325.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/28.1 burger-logo.b8503d26.png\";","import React from 'react'\n\n\n\nfunction Aux(props) {\n    return (\n        <div>\n            {props.children}\n            \n            \n        </div>\n    )\n}\n\nexport default Aux;\n\n\n","import React from 'react'\nimport logo from '../src/assest/28.1 burger-logo.png'\nimport './App.css'\n\nfunction Logo(props) {\n    return (\n        <div className=\"Logo\">\n            <img src={logo} style={{height:props.height}}  alt=\"Logo\"/>\n        </div>\n    )\n}\n\nexport default Logo\n","import React from 'react'\nimport './App.css'\nimport {NavLink} from 'react-router-dom'\n\nfunction NavigationItem(props) {\n    return (\n\n        // className={props.active? \"active\":null}\n       <li className=\"NavigationItem\">\n           <NavLink to='/' exact activeClassName='active' >Burger Builder</NavLink>\n           {props.authentication? <NavLink to='/orders' exact activeClassName='active' >Orders</NavLink>:null}\n          {props.authentication?<NavLink to='/' exact activeClassName='active' >LOGOUT</NavLink>:<NavLink to='/Authenticate' exact activeClassName='active' >Authenticate</NavLink>} \n           \n       </li>\n    )\n}\n\nexport default NavigationItem\n","import React from 'react'\nimport './App.css'\nimport NavigationItem from './NavigationItem'\n\nfunction NavigationItems(props) {\n    return (\n       <ul className=\"NavigationItems \">\n<NavigationItem authentication={props.authentication} />\n{/* <NavigationItem link='/'>CheckOut</NavigationItem> */}\n       </ul>\n    )\n}\n\nexport default NavigationItems\n","import React from 'react'\nimport './App.css'\nimport Logo from './Logo'\nimport NavigationItems from './NavigationItems'\n\nfunction Toolbar(props) {\n    return (\n       <header className=\"Toolbar\">\n           <div id=\"DrawerToggle\" onClick={props.toggle}>\n               <div></div>\n               <div></div>\n               <div></div>\n           </div>\n           <Logo/>\n           <nav>\n               <NavigationItems authentication={props.authentication}/>\n           </nav>\n\n       </header>\n    )\n}\n\nexport default Toolbar\n","import React from 'react';\nimport './App.css'\n\nconst Backdrop=(props)=>{\n\n\n    return(\n        <>\n        {/* {props.show?<div className=\"Backdrop\" onClick={props.cancel}></div>:null} */}\n        </>\n    )\n}\nexport default Backdrop;","import React from 'react'\nimport NavigationItems from './NavigationItems'\nimport Logo from './Logo'\nimport Aux from './Aux'\nimport Backdrop from './Backdrop'\n\nfunction SideDrawer(props) {\n\n    let classes=[\"SideDrawer\",\"Close\"]\nif(props.show){\n    classes=[\"SideDrawer\",\"Open\"]\n\n}\n\n    return (\n<Aux>\n<Backdrop show={props.show} cancel={props.close}/>\n     <div className={classes.join(' ')}>\n         <Logo/>\n         <nav>\n             <NavigationItems/>\n         </nav>\n     </div>\n     </Aux>\n    )\n}\n\nexport default SideDrawer\n"," import React,{useState} from 'react'\nimport Aux from './Aux'\nimport {connect} from 'react-redux'\nimport './App.css'\nimport Toolbar from './Toolbar';\nimport SideDrawer from './SideDrawer'\nfunction Layout(props) {\n\n    const[show,setShow]=useState({show:true})\n\n    const showHandler=()=>{\n        setShow(show.show=false)\n    }\n    const toggleHandler=()=>{\n\n        setShow(pre=>{\n            return{\n                show:!pre.show,\n            }\n        })\n    }\n\n    console.log(props.isAuth,\"ISAUTH\")\n    return (\n       \n        <>\n        <Aux>\n        <Toolbar authentication={props.isAuth} toggle={toggleHandler}/>\n        <SideDrawer authentication={props.isAuth} show={show} close={showHandler}  />\n             <main  className=\"content\"> {props.children}\n             </main>\n        \n        </Aux>\n        </>\n    )\n}\nconst mapStateToProps=state=>{\n    return{\n        isAuth:state.authReducer.token!==null\n    }\n}\n\nexport default connect(mapStateToProps,null)(Layout);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './App.css';\n\nclass  BurgerIngrediant extends Component{\n    \n    render(){\nlet ingredient=null;\n\nswitch(this.props.type){\n    case('bread-bottom'):\n     ingredient=<div className=\"BreadBottom\"></div>\n    break;\n    case('bread-top'):\n    ingredient=<div className=\"BreadTop\">\n        <div classsName=\"Seeds1\"></div>\n        <div className=\"Seeds2\"></div>\n    </div>\n    break;\n    case('meat'):\n    ingredient=<div className=\"Meat\"></div>\n    break;\n    case(\"cheese\"):\n    ingredient=<div className=\"Cheese\"></div>\n    break;\n  \n    case(\"salad\"):{\n        ingredient=<div className=\"Salad\"></div>\n        break;\n    }\n    case(\"bacon\"):\n    ingredient=<div id=\"Bacon\">\n    </div>\n    break;\n    default:\n        ingredient=null\n        break;\n}\nreturn ingredient;\n}\n}\nBurgerIngrediant.propTypes={\n    type:PropTypes.string.isRequired\n}\n\nexport default BurgerIngrediant;","import React from 'react';\nimport BurgerIngredient from './BurgerIngredient'\nimport './Burger.css';\nimport {withRouter} from 'react-router-dom'\nconst burger=(props)=>{\n\nconsole.log(\"Props\",props)\n    let transforMedIngredients=Object.keys(props.ingredients).map(igKey=>{\n        return [...Array(props.ingredients[igKey])].map((_,index)=>{\n            return <BurgerIngredient key={igKey+index} type={igKey}/>\n            \n        })\n        \n    }).reduce((larr,carr)=>{\n        return larr.concat(carr)\n    },[])\n    \n\n    if(transforMedIngredients.length===0){\n        \n        transforMedIngredients=<p style={{textAlign:\"center\"}}>PLease Insert Ingredients</p>\n    }\n    \n    console.log(transforMedIngredients)\n\n\n    return(\n        <div className=\"Burger\">\n<BurgerIngredient type=\"bread-top\" />\n{transforMedIngredients}\n<BurgerIngredient type=\"bread-bottom\"/>\n\n        </div>\n    )\n}\nexport default withRouter(burger);","import React from 'react';\nimport './BuildControl.css';\nconst BuildControl=(props)=>{\n\n    return(\n        <div className=\"BuildControl\">\n            <div className=\"Label\">{props.label}</div>\n            <button className=\"Less\" onClick={props.deleted} disabled={props.disabled}>Less</button>\n            <button classNAme=\"More\" onClick={props.added}>More</button>\n        </div>\n    )\n}\nexport default BuildControl;","import React from 'react'\nimport './BuildControls.css'\nimport BuildControl from './BuildControl'\nconst controls=[\n    { label:\"Salad\",type:\"salad\"},\n    { label:\"Bacon\",type:\"bacon\"},\n    { label:\"Cheese\",type:\"cheese\"},\n    { label:\"Meat\",type:\"meat\"},\n\n]\nfunction BuildControls(props) {\nconsole.log(\"iadaid\",controls)\n    return(\n        <div className=\"BuildControls\">\n            <p>Current Price:<strong>${props.price.toFixed(2)}</strong></p>\n            {\n            controls.map(ctrl=>(\n            <BuildControl key={ctrl.label} \n            disabled={props.disabled[ctrl.type]}  \n            label={ctrl.type}\n             deleted={()=>props.deletedIngredient(ctrl.type)} \n             added={()=>props.ingredientAdded(ctrl.type)} \n             />))}\n            <button className=\"OrderButton\" onClick={props.ordered} \n            disabled={!props.purchasable}>{props.isAuthenticated?\"ORDER NOW\":\"SIGN UP\"}</button>\n        </div>\n    )\n}\n\nexport default BuildControls\n\n\n","import React from 'react'\nimport './App.css'\n\nfunction Button(props) {\n    \n    return (\n       <button id={props.id} className={props.button}  onClick={props.Click} >{props.children}</button>\n     \n    )\n}\n\nexport default Button\n","import React from 'react'\nimport Aux from './Aux';\nimport Button from './Button'\nimport './App.css'\n\nfunction OrderSummary(props) {\n\nconst ingredients=Object.keys(props.ingredients).map(igkey=>{\nreturn <li key={igkey}><span style={{textTransform:\"capitalize\"}}>{igkey}:</span>{props.ingredients[igkey]}</li>\n\n})\nconst ing=ingredients.reduce((larr,carr)=>{\n    return larr.concat(carr)\n},[])\nconsole.log(ingredients,ing)\n\n    return (\n        <Aux>\n             \n            <h3>Your Order</h3>\n            <p>A Delicious burger with the following ingredients :</p>\n            <ul>\n{ingredients}\n            </ul>\n            <p><strong>Total:{props.price.toFixed(2)}</strong></p>\n            <Button  id=\"Succ\" class=\"Button\"  Click={props.purchaseContinue}>CONTINUE</Button>\n            <Button  id=\"Dan\" class=\"Button\" Click={props.purchaseCancel}>CANCEL</Button>\n            \n        </Aux>\n    )\n}\n\nexport default OrderSummary\n\n\n\n\n","import React from 'react'\nimport './App.css'\nimport Aux from './Aux'\nimport Backdrop from './Backdrop'\n\nfunction Modal(props) {\n    return (\n\n        <Aux>\n            <Backdrop show={props.show} cancel={props.cancel}/>\n            <div style={{transform:props.show ? 'translateY(0)':'tranlateY(-100vh)',\n        opacity:props.show ?'1':'0'}} className=\"Modal\"> \n            {props.children}\n        </div>\n        </Aux>\n        \n    )\n} \n \nexport default Modal\n","import React from 'react';\nimport './spinner.css'\n\nconst Spinner=()=>{\n    return(\n        <div className=\"loader\">Loading...</div>\n    )\n}\nexport default Spinner","import axios from \"axios\"\n\nexport const authStart=()=>{\n    return{\n        type:\"AUTH_START\"\n    }\n}\nexport const authSuccess=(token,userId)=>{\n    return{\n        type:\"AUTH_SUCCESS\",\n        token:token,\n        userId:userId\n    }\n}\nexport const authFail=(error)=>{\n    return{\n        type:\"AUTH_FAIL\",\n        error:error\n    }\n}\nexport const authLogout=()=>{\n    localStorage.removeItem('token')\n    localStorage.removeItem('expirationDate')\n    localStorage.removeItem(\"userId\")\n    return{\n        type:\"AUTH_LOGOUT\"\n    }\n}\nexport const authRedirectPath=(path)=>{\n    return{\n        type:\"AUTH_REDIRECT_PATH\",\n        path:path\n}\n}\n export const checkAuthTimeout=(expire)=>{\n    return dispatch=>{\n        setTimeout(()=>{\n            dispatch(authLogout())\n        },expire * 1000)\n    }  \n  }\n\nexport const auth=(email,password,isSignup)=>{\n    return dispatch=>{\n        dispatch(authStart())\n        const authData={\n            \n                email,\n                password,\n                returnSecureToken:true\n            \n        }\n        dispatch(checkAuthTimeout())\n\n        \n        \n\nlet url=\"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyA8aMyBRFw_g4ZSUHV6crYwdz1PHBgQGJ8\";\n        if(!isSignup){\n             url=\"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyA8aMyBRFw_g4ZSUHV6crYwdz1PHBgQGJ8\";\n\n        }\n        axios.post(url,authData\n        ).then(res=>{\n            localStorage.setItem('token',res.data.idToken)\n            const expirationDate=new Date(new Date().getTime() + res.data.expiresIn * 1000);\n            localStorage.setItem('expirationDate',expirationDate)\n            localStorage.setItem(\"userId\",res.data.localId)\n            dispatch(authSuccess(res.data.idToken,res.data.localId))\n            console.log(res.data.idToken,\"TOKEN\")\n            dispatch(checkAuthTimeout(res.data.expiresIn))\n          \n\n        }).catch(error=>{\n            dispatch(authFail(error))\n           \n        })\n    }\n}\nexport const authStateChange=()=>{\n    return dispatch=>{\n        const token=localStorage.getItem('token')\n        console.log(token,\"ttoken\")\n        if(!token){\n            dispatch(authLogout())\n\n        }else{\n            const expirationDate=new Date(localStorage.getItem('expirationDate'))   //Since the data receiuved from the local storage will be of string type so we have to convert itinto numver\n            if(expirationDate<=new Date()){\n                dispatch(authLogout())\n            } else{\n                const userId=localStorage.getItem(\"userId\")\n                dispatch(authSuccess(token,userId))\n                dispatch(checkAuthTimeout((expirationDate.getTime()-new Date().getTime())/1000))\n                // dispatch(authLogout())\n            }\n        }\n    }\n}","import axios from 'axios'\nimport * as actionTypes from './actionType'\n\nexport const purchaseBurgerSuccess=(id,orderData)=>{\n    return{\n        type:\"Purchase_Burger_Success\",\n        id:id,\n        orderData:orderData\n    }\n}\nexport const purchaseBurgerFail=(error)=>{\n    return{\n        type:actionTypes.PURCHASE_BURGER_FAIL,\n        error:error\n    }\n}\nexport const purchaseBurgerStart=()=>{\n    return{\n        type:\"Purchase_Burger_Start\"\n    }\n}\n\nexport const purchaseBurger=(orderData,token)=>{\n    console.log('aaa')\n    return dispatch=>{\n        dispatch(purchaseBurgerStart)\n        console.log(\"aaaaa\")\n           axios.post(\"https://myburger-f07d4.firebaseio.com//orders.json?auth=\"+token,orderData).then(response=>{\n           dispatch(purchaseBurgerSuccess(response.data.name,orderData))\n           console.log(response.data.name,orderData,\"resdata\")\n    \n    })\n    .catch(err=> {\n        dispatch(purchaseBurgerFail(err))\n        console.log(err,\"err\")\n    })\n}\n}\n\n\n    export const fetchOrderStart=()=>{\n        return{\n            type:\"FETCH_ORDER_START\"\n        }\n    }\n    export const fetchOrderSuccess=(orders)=>{\n        return{\n            type:\"FETCH_ORDER_SUCCESS\",\n            orders:orders\n        }\n    }\n    export const fetchOrderFail=()=>{\n        return{\n            type:\"FETCH_ORDER_FAIL\"\n        }\n    }\n\n    export const fetchOrders=(token,userId)=>{\n        return dispatch=>{\n            dispatch(fetchOrderStart())\n            const params='?auth='+token +'&orderBy=\"userId\"&equalTo=\"'+userId+'\"';\n\n\n            axios.get(\"https://myburger-f07d4.firebaseio.com/orders.json\"+params).then(res=>{\n                console.log(res,\"res\")\n    \n    let fetchOrder=[]\nfor (let key in res.data){\nfetchOrder.push({...res.data[key],id:key})\nconsole.log(fetchOrder,\"fetchOrder\")\n}\ndispatch(fetchOrderSuccess(fetchOrder))\n    \n}).catch(err=>{\n    dispatch(fetchOrderFail(err))\n})\n\n        }\n    }\n       \n    \n\n\n    \n\n","import React, { Component } from 'react';\n import Aux from './Aux';\n import Burger from './Burger'\n import BuildControls from './BuildControls';\nimport OrderSummary from './OrderSummary';\nimport Modal from './Modal';\nimport Spinner from './Spinner'\nimport {connect} from 'react-redux';\nimport  * as actionTypes from './store/actions/actionType'\nimport * as authAction from './store/actions/Auth' \nimport * as burgerBuilderActions from './store/actions/index'\n\n class BurgerBuilder extends Component{\n\n    \n    state={\n             \n        \n        purchase:false,\n        purchasing:false,\n        // loading:false\n        price:this.props.prices\n    }\n    componentDidMount(){\n        console.log(\"History\",this.props)\n        this.props.initIngredients()\n    }\n\n    updatePurchaseState=(ingredients)=>{\n\n     \n      const sum=  Object.keys(ingredients).map(igkey=>{\n            return ingredients[igkey]\n        }).reduce((sum,el)=>{\nreturn sum+el;\n        },0)\n\n        return sum>0\n    }\n\n    purchaseHandler=()=>{\n        if(this.props.token){\n        this.setState({purchasing:true})\n    }else{\n        this.props.onSetAuthRedirectPath(\"/\")\n        this.props.history.push(\"authenticate\")\n    }\n\n    }\n\n  \n\n\n     addIngredientsHandler=(type)=>{\n         console.log(\"dada\")\n         const oldCount=this.state.ingredients[type];\n         const updatedCount=oldCount+ 1;\n         const updatedIngredient={\n             ...this.state.ingredients\n         }\n         updatedIngredient[type]=updatedCount;\n         const oldPrice=this.state.totalPrice;\n         const priceAddition=this.props.prices[type];\n         const newPrice=priceAddition + oldPrice;\n         this.setState({totalPrice:newPrice,ingredients:updatedIngredient})\n         this.updatePurchaseState(updatedIngredient)\n     }\n      deleteIngredientsHandler=(type)=>{\n\n        const oldCount=this.state.ingredients[type];\n        const updatedCount=oldCount -1;\n        if(oldCount<=0){\n            return;\n        }\n        const updatedIngredient={...this.state.ingredients}\n        updatedIngredient[type]=updatedCount;\n        const price=this.state.totalPrice;\n        const priceAddition=this.props.prices[type];\n\n        const newPrice=price - priceAddition;\n        this.setState({totalPrice:newPrice,ingredients:updatedIngredient})\n        this.updatePurchaseState(updatedIngredient)\n\n      }\n      cancelOrder=()=>{\n          this.setState({purchasing:false})\n      }\n      purchaseContinue=()=>{\n        //   this.setState({loading:true})\n        //   const order={\n              \n        //     ingredients:this.state.ingredients,\n        //     price:this.state.totalPrice,\n        //     customer:{\n        //         name:\"Manish Kharel\",\n                \n        //         address:{\n        //             zipCode:412354,\n        //             street:\"Balkumari\",\n        //             country:'Nepal'\n        //          },\n        //          email:\"kharelmanish2@gmail.com\"\n        //     },\n        //     deliveryMethod:'fastest'\n        //   }\n          \n        //     axios.post(\"https://myburger-f07d4.firebaseio.com//orders.json\",order).then(response=>{this.setState({loading:false,purchasing:false})}).catch(err=> {this.setState({loading:false,})})\n         const queryParams=[]\n         for (let i in this.props.ing){\n            queryParams.push(encodeURIComponent(i)+ \"=\" + encodeURIComponent(this.props.ing[i]))\n         }\n         queryParams.push(\"price=\"+ this.props.prices.toFixed(2))\n         const queryString=queryParams.join(\"&\")\n         console.log(\"Queryparams\",queryString)\n\n         this.props.history.push('/checkout')\n        this.props.history.push({\n           \n            search:'?' + queryString,\n        })\n      }\n      \n\n     render(){\n        console.log(\"History\",this.props)\n\n        const disabledInfo={\n            ...this.props.ing,\n        }\n\n        for(let key in disabledInfo){\n            disabledInfo[key]=disabledInfo[key]<=0;\n        }\n\n        \n\n       \n        let burger=<Spinner/>\n        let orderSummary=null\n\n        if(this.props.ing){\n             burger=(\n                <Aux>\n                <Burger ingredients={this.props.ing}/>\n                <BuildControls price={this.props.prices} \n                ingredientAdded={this.props.onIngredientAdded} \n                deletedIngredient={this.props.onIngredientRemoved} \n                purchasable={this.updatePurchaseState(this.props.ing)}\n                isAuthenticated={this.props.token}\n                disabled={disabledInfo}\n                ordered={this.purchaseHandler}\n                purchase={this.state.purchasing}\n                />\n                \n             </Aux>\n           \n            )\n            orderSummary=(\n                <OrderSummary ingredients={this.props.ing} price={this.props.prices} purchaseContinue={this.purchaseContinue} purchaseCancel={this.cancelOrder}/>\n                \n             )\n        }\n        if(this.props.loading){\n            orderSummary=<Spinner/>\n\n        }\n         return(\n             <Aux>\n                 <div>{this.props.error}</div>\n             \n             <Modal show={this.state.purchasing} cancel={this.cancelOrder}>\n              {orderSummary}\n             </Modal>\n          {burger}\n          </Aux>\n             \n         )\n     }\n }\n\nconst mapStateToProps=state=>{\n    return{\n    ing:state.burgerBuilder.ingredients,\n    prices:state.burgerBuilder.totalPrice,\n    loading:state.burgerBuilder.loading,\n    error:state.order.error,\n    token:state.authReducer.token!==null\n    \n}\n}\nconst mapDispatchtoProps=dispatch=>{\n    return{\n        onIngredientAdded:(name)=>dispatch(burgerBuilderActions.addIngredient(name)),\n        onIngredientRemoved:(name)=>dispatch(burgerBuilderActions.removeIngredient(name)),\n        initIngredients:()=>dispatch(burgerBuilderActions.initIngredients()),\n        onSetAuthRedirectPath:(path)=>dispatch(authAction.authRedirectPath(path))\n\n    }\n}\n\n export default connect(mapStateToProps,mapDispatchtoProps)(BurgerBuilder);\n","import axios from 'axios';\nimport * as actionTypes from './actionType'\n\nexport const addIngredient=(name)=>{\n    return{\n        type:actionTypes.ADD_INGREDIENT,\n        name:name\n    }\n}\n\nexport const removeIngredient=(name)=>{\n    return{\n        type:actionTypes.REMOVE_INGREDIENT,\n        name:name\n    }\n}\n\nexport const setIngredient=(ingredients)=>{\n    return{\n        type:actionTypes.SET_INGREDIENT,ingredients:ingredients\n    }\n}\n\nexport const Error=()=>{\n    return{\n        type:\"Error\"\n    }\n}\n\n\n\n\nexport const initIngredients=()=>{\n    return dispatch=>{  \n  \ndispatch(Error())\n        axios.get(\"https://myburger-f07d4.firebaseio.com/ingredients.json\").then(response=>{\n            dispatch(setIngredient(response.data))\n        })\n        \n}}\n\n","export const ADD_INGREDIENT=\"ADD_INGREDIENT\"\n// export const ADD_INGREDIENT=\"ADD_INGREDIENT\"\\\nexport const REMOVE_INGREDIENT=\"REMOVE_INGREDIENT\"\n\nexport const SET_INGREDIENT=\"SET_INGREDIENT\"\n\nexport const PURCHASE_BURGER_SUCCESS=\"PURCHASE_BURGER_SUCCESS\"\nexport const PURCHASE_BURGER_FAIL=\"PURCHASE_BURGER_FAIL\"\n\nexport const purchaseBurgerStart=\"Purchase_Burger_Start\"","import React from 'react'\nimport Burger from './Burger'\n// import Button from './Button'\nimport './App.css'\n\nfunction CheckoutSummary(props) {\n    return (\n        <div className=\"Checkout\">\n            <h1>We Hope it tastes good</h1>\n            <div style={{width:\"100%\",height:\"auto\",margin:\"auto\"}}>\n<Burger ingredients={props.ingredients}/>\n\n            </div>\n            <button id=\"Succ\" onClick={props.checkoutContinue}>CONTINUE </button>  \n            <button id=\"Dan\" onClick={props.checkoutCancel}>CANCEL </button>  \n\n            \n        </div>\n    )\n}\n\nexport default CheckoutSummary\n","import React from 'react';\nimport './index.css'\nimport './input.css'\nconst Input=(props)=>{\n    console.log(props,\"input.js\")\n\n    let classes=\"InputElement valid\"\nlet invalidMessage=null\nlet invalid=null\n\n    if(props.invalid && props.touched    ){\n        classes=\"InputElement \"\n        invalidMessage=(\n        <p>PLease Enter a Valid {props.type} min 3 words req</p>\n        )\n    }\n    // if(props.invalid || props.touched ||  props.value.length<=3){\n    //     invalid=(\n    //         <p>PLease Enter a Valid {props.type} min 3 words req</p>\n    //         )\n    // }\n    \n    console.log(props.invalid)\n    if(props.value===undefined){\n        classes=\"InputElement valid\"\n    }\n\n    let inputElement=null\n\n    switch(props.elementType){\n        case \"input\":\n             inputElement=<input className={classes}    onChange={props.changed}   {...props.elementConfig} value={props.value}/>\n\n             console.log(classes)\n        \n        break;\n        case \"textarea\":\n             inputElement=<textarea className={classes}   onChange={props.changed}   {...props.elementConfig} value={props.value}/>\n        \n        break;\n        default:\n             inputElement=<input className={classes}    onChange={props.changed}{  ...props.elementConfig} value={props.value}/>\n             break;\n             case \"select\":\n                 inputElement=(\n                     <select className={classes} value={props.value} >\n                         \n                         {props.elementConfig.options.map(option=>\n                             <option key={option.value } value=\"fast\"> {option.displayValue}</option>\n                             \n                         )}\n                         \n                     </select>\n                 )\n                \n    }\n    \n\n    return(\n    <div className=\"Input\">\n      \n        {inputElement}\n        {invalidMessage}\n        {/* {invalid} */}\n    </div>\n)\n}\nexport default Input","import React, { Component } from 'react'\nimport './ContactData.css'\nimport axios from 'axios'\nimport {withRouter} from 'react-router-dom'\nimport Input from  './Input'\nimport Spinner from './Spinner'\nimport './index.css'\nimport {connect} from 'react-redux';\nimport * as actions from '../src/store/actions/order'\n\n class ContactData extends Component {\n    \n\n    state={\n        orderForm:{\n            name:{\n                elementType:'input',\n                elementConfig:{\n                    type:'text',\n                    placeholder:'my name'\n                },\n                value:'',\n                validation:{\n                    required:true,\n                    minLength:3\n                },\n                valid:false,\n                touched:false\n            },\n            street:{\n                elementType:'input',\n                elementConfig:{\n                    type:'text',\n                    placeholder:\"Your Street\"\n                },\n                value:'',\n                validation:{\n                    required:true,\n                    minLength:3\n                },\n                valid:false,\n                touched:false\n            },\n            zipcode:{\n                elementType:'input',\n                elementConfig:{\n                    type:'text',\n                    placeholder:\"Zipcode\"\n                },\n                value:'',\n                validation:{\n                    required:true,\n                    minLength:5,\n                    maxLength:5\n                },\n                \n                valid:false,\n                touched:false\n\n            },\n            country:{\n                elementType:'input',\n                elementConfig:{\n                    type:'text',\n                    placeholder:\"Your Country\"\n                },\n                value:'',\n                validation:{\n                    required:true,\n                    minLength:3\n                },\n                valid:false,\n                touched:false\n            },\n            email:{\n                elementType:'input',\n                elementConfig:{\n                    type:'email',\n                    placeholder:\"Your Email\"\n                },\n                value:'',\n                validation:{\n                    required:true,\n                    minLength:3\n                },\n                valid:false,\n                touched:false\n            },\n            deleveryMethod:{\n                elementType:\"select\",\n                elementConfig:{\n                    options:[{value:\"fastest\",displayValue:\"Fastest\"},\n                    {value:\"slowest\",displayValue:\"Slowest\"}\n                ]\n                },\n                value:\"fastest\",\n                // validation:{},\n                valid:true\n            }   \n        \n       \n    },\n    \n    formIsValid:false\n    }\n\n    checkValidity=(value,rules)=>{\n      \n        let isValid=true\n        if(rules.required){\nisValid=value.trim()!==\"\" && isValid\nconsole.log(value,rules.required,isValid,\"Min Length\")\n\n        }\n        if(rules.minLength){\nisValid=value.length>=rules.minLength && isValid\nconsole.log(value.length,rules.minLength,isValid,\"Min Length\")\n        }\n       if(rules.maxLength){\n           isValid=value.length<=rules.maxLength && isValid\n           console.log(value.length,rules.maxLength,\"MAx-length\")\n       }\n       console.log(value.length,rules,isValid,\"Valid It anyhow\")\n        return isValid\n    }\n\n    orderHandler=(e)=>{\n        e.preventDefault()\n        this.props.history.push('/')\n        \n      \n           this.setState({loading:true})\n           const formData={}\n        for (let name in this.state.orderForm){\n            formData[name]=this.state.orderForm[name].value\n        }\n                  let order={\n                      \n                    ingredients:this.props.ing,\n                    price:this.props.prices,\n                  orderData:formData,\n                  userId:this.props.userId\n                  }\n                 this.props.onPurchaseBurger(order,this.props.token)\n                  \n               \n                \n        \n        }\n\n        inputChangedHandler=(e,name)=>{\n            const updatedOrderForm={...this.state.orderForm}\n            const updatedFormElement={...updatedOrderForm[name] }\n            updatedFormElement.value=e.target.value;\n            updatedFormElement.valid=this.checkValidity(updatedFormElement.value,updatedFormElement.validation)\n            updatedFormElement.touched=true;\n            console.log(updatedFormElement,\"updated\")\n            console.log(updatedOrderForm[name],\"validation\")\nupdatedOrderForm[name]=updatedFormElement;\nlet formIsValid=true;\nfor(let key in updatedOrderForm){\n    formIsValid=updatedOrderForm[key].valid && formIsValid;\n    console.log(formIsValid,\"formis validornot\")\n\n\n}\nthis.setState({orderForm:updatedOrderForm,formIsValid:formIsValid})\nconsole.log(formIsValid,\"formValid\")\nconsole.log(this.state)\n\n        }\n        \n\n    render() {\n        \n       \n        const formElementArray=[]\n        for (let key in this.state.orderForm){\n            formElementArray.push({id:key,config:this.state.orderForm[key]})\n        }\n\n\n\n        let form=(\n            <form onSubmit={this.orderHandler}>\n \n                   \n                 {formElementArray.map(formElement=>{\n                     console.log(formElement,\"formELement\")\n                    return( <Input key={formElement.id} elementType={formElement.config.elementType} \n                        elementConfig={formElement.config.elementConfig} \n                        value={formElement.config.value}\n                        touched={formElement.config.touched}\n                        type={formElement.id}\n                        \n\n                        changed={(e)=>this.inputChangedHandler(e,formElement.id)}\n                        invalid={!formElement.config.valid}\n                        />\n                        \n                        )})}\n                        \n                   \n                    <button id=\"Succ\" disabled={!this.state.formIsValid}>ORDER</button>\n            </form>\n        )\n        \n        if(this.props.loading===true){\n            form=(<Spinner/>)\n        }\n        console.log(this.props.loading,\"LOad\")\n        // console.log(\"Order List\",order)\n        return (\n            <div className=\"ContactData\" >\n                <h4>Enter your Contact Data</h4>\n                \n                \n                   \n{form}\n                \n            </div>\n        )\n    }\n}\n\nconst mapStateToProps=state=>{\n    return{\n    ing:state.burgerBuilder.ingredients,\n    prices:state.burgerBuilder.totalPrice,\n    loading:state.order.spinnerLoading,\n    error:state.order.error,\n    token:state.authReducer.token,\n    userId:state.authReducer.userId\n    \n}\n}\nconst mapDispatchToProps=dispatch=>{\n    return{\n    onPurchaseBurger:(orderData,token)=>dispatch(actions.purchaseBurger(orderData,token))\n}}\nexport default withRouter(connect(mapStateToProps,mapDispatchToProps)(ContactData));\n// export default connect(mapStateToProps,mapDispatchtoProps)(BurgerBuilder);\n","import React, { Component } from 'react'\nimport CheckoutSummary from './CheckoutSummary'\nimport {Route,Redirect} from 'react-router-dom'\nimport ContactData from './ContactData'\nimport {connect} from 'react-redux'\n// import axios from 'axios'\n\n class    Checkout extends Component {\n\n    \n    state={\n        ingredients:null,\n        totalPrice:0\n    }\n    componentWillMount(){\n        const query=new URLSearchParams(this.props.location.search)\n        console.log(\"Querydata\",query)\n        console.log(\"ChekoutQuery\",query)\n        const ingredients={}\n        let param;\n        let price=0\n        for (  param of query.entries()){\n            if(param[0]===\"price\"){\n                price=param[1]\n            }else{\n            ingredients[param[0]]=+param[1];\n        }\n        }\n       \n        \n        this.setState({ingredients:ingredients,totalPrice:price})\n    }\n\n    checkoutCancelHandler=()=>{\n        console.log(\"adad\")\n        this.props.history.goBack()\n    }\n    checkoutContinueHandler=()=>{\n        this.props.history.replace('/checkout/contact-data')\n    }\n\n    render() {\n\n\nlet summary=<Redirect to=\"/\"/>\nif(this.props.ing){\n    summary=(\n        <div>\n                     \n                     <CheckoutSummary checkoutContinue={this.checkoutContinueHandler} checkoutCancel={this.checkoutCancelHandler} ingredients={this.state.ingredients}/>\n<Route path= '/checkout/contact-data' exact  render={(props)=><ContactData ingredients={this.state.ingredients} price={this.state.totalPrice}/>}/>\n{/* <ContactData ingredients={this.state.ingredients} totalPrice={this.state.totalPrice} /> */} \n        </div>\n    )\n}\n       \n        return (\n            summary\n        )\n         \n        \n    }\n}\nconst mapStateToProps=state=>{\n    return{\n        ing:state.burgerBuilder.ingredients\n    }\n}\nexport default connect(mapStateToProps)(Checkout);\n\n","import React from 'react'\nimport './Order.css'\n\nfunction Order(props) {\n    console.log(props)\n\n    let array=[]\n    for(let name in props.ingredients){\n        \n        array.push({name:name,ingredients:props.ingredients[name]})\n        console.log(\"array\",array)\n\n    }\n    let value=array.map(data=>{\n        return(\n        <span>{data.name}: {data.ingredients}</span>\n        )\n    })\n    return (\n        <div className=\"order\">\n            \n    <p>Ingredients:{value}</p>\n    <h1>Price:${props.price.toFixed(2)}</h1>\n        </div>\n    )\n}\n\nexport default Order\n","import React, { Component } from 'react';\nimport Order from './Order'\nimport './Order.css'\nimport axios from 'axios'\nimport Spinner from './Spinner'\n// import * as orderFetch from '../src/store/actions/order'\n\nimport * as orderFetch from '../src/store/actions/order'\nimport {connect} from 'react-redux'\n\n class Orders extends Component {\n\nstate={\n    orders:null,\n    loading:true\n}\n\ncomponentDidMount(){\n    \n    \n    const params='?auth='+this.props.token +'&orderBy=\"userId\"&equalTo=\"'+this.props.userId+'\"';\n    console.log(params,\"par\")\naxios.get(\"https://myburger-f07d4.firebaseio.com/orders.json\"+ params).then(res=>{\n    console.log(params,\"params\")\n    let fetchOrder=[]\nfor (let key in res.data){\nfetchOrder.push({...res.data[key],id:key})\n}\nthis.setState({loading:false,orders:fetchOrder\n})\n    console.log(fetchOrder,\"Order Data\")\n})\n  \n// this.props.onFetchOrder(this.props.token,this.props.userId)\n\n// let order=this.props.onFetchOrder(this.props.token,this.props.userId)\n// console.log(order,\"ORDER\")\n\n}\n\n\n    render() {\n        console.log(this.state,\"DATASSS\")\n        console.log(this.props.orders,\"ORDDERS\")\n        console.log(this.props.token,\"token\")\n\n \nif(this.state.loading){\n    return(<Spinner/>)\n}     \n\n\n\n        return (\n           <div className=\"orders\">\n          {this.state.orders.map(order=>{\n              \n              return(\n                  <Order key={order.id} ingredients={order.ingredients} price={+order.price} />\n                //    price={order.price}\n              )\n          })}\n           </div>\n           \n        )\n    }\n}\n\n\nconst mapDispatchToProps=(dispatch)=>{\n    return{\n        onFetchOrder:(token,userId)=>dispatch(orderFetch.fetchOrders(token,userId))\n\n    }\n  \n}\n  const mapStateToProps=state=>{\n        return{\n            token:state.authReducer.token,\n            orders:state.order.orders,\n            userId:state.authReducer.userId,\n        }\n    }\n\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Orders);\n","import React, { Component } from 'react'\nimport Input from './Input'\nimport \"./Auth.css\"\nimport {connect} from 'react-redux'\nimport * as authActions from './store/actions/Auth' \nimport Spinner from './Spinner'\nimport { Redirect } from 'react-router-dom'\nclass Auth extends Component{\n\n    componentDidMount(){\n        if(!this.props.building && this.props.authRedirectPath!==\"/\"){\n            this.props.onAuthRedirectPath(\"/checkout\")\n        }\n    }\n\n    state={\n        controls:{\n            email:{\n                elementType:'input',\n                elementConfig:{\n                    type:'email',\n                    placeholder:'Email'\n                },\n                value:'',\n                validation:{\n                    required:true,\n                    isEmail:true,\n                    \n                },\n                valid:false,\n                touched:false\n            },\n            password:{\n                elementType:'input',\n                elementConfig:{\n                    type:'text',\n                    placeholder:'password'\n                },\n                value:'',\n                validation:{\n                    required:true,\n                  \n                },\n                valid:false,\n                touched:false,\n            },\n        },\n        isSignup:true\n    } \n\n    checkValidity=(value,rules)=>{\n      \n        let isValid=true\n        if(rules.required){\nisValid=value.trim()!==\"\" && isValid\n\n        }\n        if(rules.minLength){\nisValid=value.length>=rules.minLength && isValid\n        }\n       if(rules.maxLength){\n           isValid=value.length<=rules.maxLength && isValid\n           console.log(value.length,rules.maxLength,\"MAx-length\")\n       }\n        return isValid\n    }\n\n\n    inputChangedHandler=(e,name)=>{\n        const updatedControls={...this.state.controls,\n            [name]:{\n         ...this.state.controls[name],\n         value:e.target.value,\n         valid:this.checkValidity(e.target.value,this.state.controls[name].validation),\n         touched:true,\n            }\n        }\n\n\nthis.setState({controls:updatedControls})\n\n\n    }\n     submitHandler=(e)=>{\n         e.preventDefault()\n\n         this.props.onAuth(this.state.controls.email.value,this.state.controls.password.value,this.state.isSignup)\n     }\n\n     onSignChange=()=>{\n         this.setState(pre=>{\n             return{...pre,isSignup:!pre.isSignup}\n         })\n     }\n  \n\n    render(){ \n\n// \n\n        const formElementArray=[]\n        for (let key in this.state.controls){\n            formElementArray.push({id:key,config:this.state.controls[key]})\n        }\n        console.log(formElementArray.length,\"Length\") \n\n        const form=formElementArray.map(formElement=>( <Input key={formElement.id} elementType={formElement.config.elementType} \n            elementConfig={formElement.config.elementConfig} \n            value={formElement.config.value}\n            touched={formElement.config.touched}\n            type={formElement.id}\n            \n\n            changed={(e)=>this.inputChangedHandler(e,formElement.id)}\n            invalid={!formElement.config.valid}\n            />\n            \n            ))\n\n\n\n\n            // let Error=null\nlet redirect=null;\nif(this.props.token){\nredirect=<Redirect to={this.props.authRedirectPath}/>\n}\n\nconsole.log(this.props.token,\"TOKEEN\")\n         \n    \n        \n\n            let spinner=(\n                <div className=\"Auth\">\n                    {/* {Error} */}\n                    {redirect}\n                <form onSubmit={this.submitHandler}>\n                    <Input/>\n\n{form}\n        <button id=\"Succ\" >{this.state.isSignup?\"SIGN UP\":\"SIGN IN\"}</button>\n        <button id=\"Dan\" onClick={this.onSignChange} >SWITCH TO {this.state.isSignup?\"SIGN IN\":\"SIGN UP\"}</button>\n\n                </form>\n            </div>   \n            )\n        if(this.props.loading){\n            return spinner=(\n                <Spinner/>\n            )\n        }  \n\n        // if(this.props.error){\n        //     Error=(\n        //     <p>{this.props.error.message}</p>\n        //     )\n        // }\n\n\n        return(\n            \n          <>\n          {spinner}\n          </>\n        )\n    }\n}\n\nconst mapStateToProps=state=>{\n    return{\n        loading:state.authReducer.loading,\n        error:state.authReducer.error,\n        token:state.authReducer.token!==null,\n        building:state.authReducer.building,\n        authRedirectPath:state.authReducer.authRedirectPath\n    }\n}\n\nconst mapDispatchToProps=dispatch=>{\n    return{\n        onAuth:(email,password,isSignup)=>dispatch(authActions.auth(email,password,isSignup)),\n        onAuthRedirectPath:(path)=>dispatch(authActions.authRedirectPath(path))\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Auth);","import React from 'react';\nimport {connect} from 'react-redux'\nimport * as actions from './store/actions/Auth'\nimport {Redirect} from 'react-router-dom'\nclass Logout extends React.Component{\n\ncomponentDidMount(){\n    this.props.onAuthLogout()\n}\n\n    render(){\n    return(\n        <Redirect to=\"/\"/>\n    )\n\n    }\n}\n    \n   \n\n\n\n    \nconst mapDispatchToProps=dispatch=>{\n    return{\nonAuthLogout:()=>dispatch(actions.authStart())\n}}\n\nexport default connect(mapDispatchToProps)(Logout)","import React,{Component} from 'react';\nimport Layout from './Layout';\nimport BurgerBuilder from './BurgerBuilder'\nimport './App.css';\nimport Checkout from './Checkout'\nimport {Route,Switch} from 'react-router-dom'\nimport ContactData from './ContactData';\nimport Orders from './Orders'\nimport Auth from './Auth'\nimport Logout from './Logout'\nimport {connect} from \"react-redux\"\nimport * as authActions from './store/actions/Auth'\nclass App extends Component {\ncomponentDidMount(){\n    this.props.onStateChange()\n}\n    render(){\n\n\n        // let routes=(\n//     <Switch>\n//         <Route path=\"/Authenticate\" exact component={Auth} />\n//         <Route path=\"/\" exact component={BurgerBuilder}/>\n//         <Redirect to=\"/\" />\n//     </Switch>\n// )\n\n// if(this.props.token){\n//     routes=(\n//         <Switch>\n\n// <Route path=\"/orders\" exact component={Orders}/>\n// <Route exact path=\"/checkout/contact-data\" component={ContactData}/>\n// <route path=\"/logout\" exact component={Logout}/>\n// <Route path=\"/checkout\" exact component={Checkout}/>\n// <Redirect to=\"/\"/>\n//         </Switch>\n//         )\n    \n// }\nreturn(\n<>\n        <Layout>\n            <Switch>\n            <Route path=\"/checkout\" exact component={Checkout}/>\n<Route path=\"/orders\" exact component={Orders}/>\n<Route path='/Authenticate' exact component={Auth}/>\n<route path=\"/logout\" exact component={Logout}/>\n                <Route path=\"/\" exact component={BurgerBuilder}/>\n                                <Route exact path=\"/checkout/contact-data\" component={ContactData}/>\n            </Switch>\n            \n        </Layout>\n        </>\n        )\n    }\n}\n\nconst mapStateToProps=state=>{\n    return{\n        token:state.authReducer.token\n    }\n}\n\nconst mapDispatchToProps=dispatch=>{\n    return{\n        onStateChange:()=>dispatch(authActions.authStateChange())\n    }\n}\nexport default connect(mapStateToProps,mapDispatchToProps)(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const updateObject=(oldObject,updatedObject)=>{\n\n    return{\n        ...oldObject,\n        ...updatedObject\n    }\n\n}","import * as actionTypes from '../actions/actionType'\nimport { updateObject } from './utility'\nlet initialState={\n    ingredients:null,\n    totalPrice:4,\n    loading:false,\n    building:false\n}\nconst INGREDIENT_PRICES={\n    salad:0.5,\n    cheese:0.4,\n    meat:1.3,\n    bacon:0.7\n}\n\nconst reducer=(state=initialState,action)=>{\n\n    switch(action.type){\n        case actionTypes.ADD_INGREDIENT:\n            const updatedIngredient={[action.name]:state.ingredients[action.name]+1}\n            const updatedIngredients=updateObject(state.ingredients,updatedIngredient)\n\n            const updatedState={\n                ingredients:updatedIngredients,\n                totalPrice:state.totalPrice+INGREDIENT_PRICES[action.name],\n                building:true,\n            }\n\n        return  updateObject(state,updatedState)\n        \n        // break;\n        case actionTypes.REMOVE_INGREDIENT:\n\n            const updatedIngredientRemoved={[action.name]:state.ingredients[action.name]-1}\n            const updatedIngredientsRemoved=updateObject(state.ingredients,updatedIngredientRemoved)\n\n            const updatedStateRemoved={\n                ingredients:updatedIngredientsRemoved,\n                totalPrice:state.totalPrice+INGREDIENT_PRICES[action.name],\n                building:true\n            }\n\n\n            return updateObject(state,updatedStateRemoved)\n\ncase \"SET_INGREDIENTS\":{\n    return updateObject(state,{\n        ingredients:{\n            salad:action.ingredients.salad,\n            bacon:action.ingredients.bacon,\n            cheese:action.ingredients.cheese,\n            meat:action.ingredients.meat\n        },\n        totalPrice:4,\n        loading:false,\n        building:false\n    })\n}\n\n        case \"Error\":\n            return updateObject(state,{loading: true})\n            case actionTypes.SET_INGREDIENT:\n                return{\n                    ...state,\n                    ingredients:action.ingredients,\n                    loading:false,\n                    totalPrice:4,\n                }\n    }\n    return state;\n}\nexport default reducer","// import * as orderActionTypes from './order'\nimport * as orderActionTypes from '../actions/actionType.js'\n\nconst initialState={\n    orders:[],\n    spinnerLoading:false,\n    error:''\n}\n\nexport const orderReducer=(state=initialState,action)=>{\n    switch(action.type){\n        case \"Purchase_Burger_start\":\n            return{\n                ...state,\n                spinnerLoading:true,\n            }\n        case \"Purchase_Burger_Success\":\n            const newOrder={\n                ...action.orders,\n                id:action.id\n            }\n            return{\n                ...state,\n                orders:state.orders.concat(newOrder),\n                spinnerLoading:false\n            }\n            case orderActionTypes.PURCHASE_BURGER_FAIL:\n                return{\n                    ...state,error:action.error\n                }\ncase \"FETCH_ORDER_START\":\n    return{\n        ...state,\n        loading:true\n    }\n    case \"FETCH_ORDER_SUCCESS\":\n    return{\n        ...state,\n        orders:state.orders.push(action.orders)\n\n    }\n    case \"Fetch_ORDER_FAIL\":\n        return{\n            ...state,loading:false\n        }\n\n                default:\n                    return initialState \n            \n    }\n}\n","const initialState={\n    error:null,\n    token:null,\n    userId:null,\n    loading:false,\n    authRedirectPath:\"/\"\n}\n\nexport const authReducer=(state=initialState,action)=>{\n    switch(action.type){\n        case \"AUTH_START\":\n            return{\n                ...state,\n                loading:true\n            }\n            case \"AUTH_SUCCESS\":\n            return{\n                ...state,\n                loading:false,\n                token:action.token,\n                userId:action.userId\n\n            }\n            case \"AUTH_LOGOUT\":\n                return{\n                    ...state,\n                    token:null,\n                    userId:null\n                }\n            case \"AUTH_FAIL\":\n                return{\n                    ...state,\n                    loading:false,\n                    error:action.error\n\n                }\n                case \"AUTH_REDIRECT_PATH\":{\n                    return{\n                        ...state,\n                        authRedirectPath:action.path\n                    }\n                }\n                default:\n                    return state\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom';\nimport    {Provider} from 'react-redux'\nimport thunk from 'redux-thunk'\n\nimport burgerBuilder from './store/reducer/burgerBuilder'\nimport {createStore,applyMiddleware,compose,combineReducers} from 'redux'\nimport {orderReducer} from './store/reducer/order'\nimport {authReducer} from './store/reducer/Auth'\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducer=combineReducers({\n  burgerBuilder:burgerBuilder,\n  order:orderReducer,\n  authReducer:authReducer\n})\nconst store=createStore(rootReducer,composeEnhancers(applyMiddleware(thunk)));\n\n\nconst app=(    \n  <Provider store={store}>\n<BrowserRouter>\n<App/>\n</BrowserRouter>\n</Provider>\n)\n\nReactDOM.render(\n  app,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}